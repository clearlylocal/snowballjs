// Generated by Snowball 2.2.0 - https://snowballstem.org/
// deno-lint-ignore-file
import BaseStemmer from '../core/base-stemmer.mjs'

/** @typedef {{ stemWord(word: string): string }} Stemmer */

/** @type {{ new(): Stemmer }} */
const HindiStemmer = function () {
	var base = new BaseStemmer()
	/** @const */ var a_0 = [
		['आँ', -1, -1],
		['ाँ', -1, -1],
		['इयाँ', 1, -1],
		['आइयाँ', 2, -1],
		['ाइयाँ', 2, -1],
		['ियाँ', 1, -1],
		['आं', -1, -1],
		['उआं', 6, -1],
		['ुआं', 6, -1],
		['ईं', -1, -1],
		['आईं', 9, -1],
		['ाईं', 9, -1],
		['एं', -1, -1],
		['आएं', 12, -1],
		['उएं', 12, -1],
		['ाएं', 12, -1],
		['ताएं', 15, -1, r_CONSONANT],
		['अताएं', 16, -1],
		['नाएं', 15, -1, r_CONSONANT],
		['अनाएं', 18, -1],
		['ुएं', 12, -1],
		['ओं', -1, -1],
		['आओं', 21, -1],
		['उओं', 21, -1],
		['ाओं', 21, -1],
		['ताओं', 24, -1, r_CONSONANT],
		['अताओं', 25, -1],
		['नाओं', 24, -1, r_CONSONANT],
		['अनाओं', 27, -1],
		['ुओं', 21, -1],
		['ां', -1, -1],
		['इयां', 30, -1],
		['आइयां', 31, -1],
		['ाइयां', 31, -1],
		['ियां', 30, -1],
		['ीं', -1, -1],
		['तीं', 35, -1, r_CONSONANT],
		['अतीं', 36, -1],
		['आतीं', 36, -1],
		['ातीं', 36, -1],
		['ें', -1, -1],
		['ों', -1, -1],
		['इयों', 41, -1],
		['आइयों', 42, -1],
		['ाइयों', 42, -1],
		['ियों', 41, -1],
		['अ', -1, -1],
		['आ', -1, -1],
		['इ', -1, -1],
		['ई', -1, -1],
		['आई', 49, -1],
		['ाई', 49, -1],
		['उ', -1, -1],
		['ऊ', -1, -1],
		['ए', -1, -1],
		['आए', 54, -1],
		['इए', 54, -1],
		['आइए', 56, -1],
		['ाइए', 56, -1],
		['ाए', 54, -1],
		['िए', 54, -1],
		['ओ', -1, -1],
		['आओ', 61, -1],
		['ाओ', 61, -1],
		['कर', -1, -1, r_CONSONANT],
		['अकर', 64, -1],
		['आकर', 64, -1],
		['ाकर', 64, -1],
		['ा', -1, -1],
		['ऊंगा', 68, -1],
		['आऊंगा', 69, -1],
		['ाऊंगा', 69, -1],
		['ूंगा', 68, -1],
		['एगा', 68, -1],
		['आएगा', 73, -1],
		['ाएगा', 73, -1],
		['ेगा', 68, -1],
		['ता', 68, -1, r_CONSONANT],
		['अता', 77, -1],
		['आता', 77, -1],
		['ाता', 77, -1],
		['ना', 68, -1, r_CONSONANT],
		['अना', 81, -1],
		['आना', 81, -1],
		['ाना', 81, -1],
		['आया', 68, -1],
		['ाया', 68, -1],
		['ि', -1, -1],
		['ी', -1, -1],
		['ऊंगी', 88, -1],
		['आऊंगी', 89, -1],
		['ाऊंगी', 89, -1],
		['एंगी', 88, -1],
		['आएंगी', 92, -1],
		['ाएंगी', 92, -1],
		['ूंगी', 88, -1],
		['ेंगी', 88, -1],
		['एगी', 88, -1],
		['आएगी', 97, -1],
		['ाएगी', 97, -1],
		['ओगी', 88, -1],
		['आओगी', 100, -1],
		['ाओगी', 100, -1],
		['ेगी', 88, -1],
		['ोगी', 88, -1],
		['ती', 88, -1, r_CONSONANT],
		['अती', 105, -1],
		['आती', 105, -1],
		['ाती', 105, -1],
		['नी', 88, -1, r_CONSONANT],
		['अनी', 109, -1],
		['ु', -1, -1],
		['ू', -1, -1],
		['े', -1, -1],
		['एंगे', 113, -1],
		['आएंगे', 114, -1],
		['ाएंगे', 114, -1],
		['ेंगे', 113, -1],
		['ओगे', 113, -1],
		['आओगे', 118, -1],
		['ाओगे', 118, -1],
		['ोगे', 113, -1],
		['ते', 113, -1, r_CONSONANT],
		['अते', 122, -1],
		['आते', 122, -1],
		['ाते', 122, -1],
		['ने', 113, -1, r_CONSONANT],
		['अने', 126, -1],
		['आने', 126, -1],
		['ाने', 126, -1],
		['ो', -1, -1],
		['्', -1, -1],
	]

	/** @const */ var /** Array<int> */ g_consonant = [255, 255, 255, 255, 159, 0, 0, 0, 248, 7]

	/** @return {boolean} */
	function r_CONSONANT() {
		if (!(base.in_grouping_b(g_consonant, 2325, 2399))) {
			return false
		}
		return true
	}

	this.stem = /** @return {boolean} */ function () {
		if (base.cursor >= base.limit) {
			return false
		}
		base.cursor++
		base.limit_backward = base.cursor
		base.cursor = base.limit
		base.ket = base.cursor
		if (base.find_among_b(a_0) == 0) {
			return false
		}
		base.bra = base.cursor
		if (!base.slice_del()) {
			return false
		}
		base.cursor = base.limit_backward
		return true
	}

	/**@return{string}*/
	this['stemWord'] = function (/**string*/ word) {
		base.setCurrent(word)
		this.stem()
		return base.getCurrent()
	}
}

export default HindiStemmer
